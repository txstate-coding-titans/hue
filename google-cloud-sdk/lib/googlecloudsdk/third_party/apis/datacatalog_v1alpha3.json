{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "datacatalog:v1alpha3",
  "name": "datacatalog",
  "canonicalName": "Cloud DataCatalog",
  "version": "v1alpha3",
  "revision": "0",
  "title": "Cloud DataCatalog API",
  "description": "DataCatalog APIs provides features to attach metadata to Google Cloud Platform resources like Bigquery Tables.<br>\nKey critical resources include -<br>\n    - Entries  (Datahub representation of a cloud resource)<br>\n    - Tag Templates (Definition of columns and value types for attaching metadata)<br>\n    - Tags (Values associated with Tag templates and attached to Entries.)<br>\nDatahub also provides rich search functionality to search resources for Entries and tags.\n",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/data-catalog/docs/",
  "protocol": "rest",
  "rootUrl": "https://datacatalog.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://datacatalog.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "GoogleCloudDatacatalogV1alpha3Crawler": {
      "id": "GoogleCloudDatacatalogV1alpha3Crawler",
      "description": "Crawler Metadata.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of the crawler. Must be empty when creating\na crawler. For example, \"projects\/a\/crawlers\/b\".",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The display name of the crawler.",
          "type": "string"
        },
        "description": {
          "description": "The description of the crawler.",
          "type": "string"
        },
        "config": {
          "description": "Required. The configuration of the crawler.",
          "$ref": "GoogleCloudDatacatalogV1alpha3CrawlerConfig"
        }
      }
    },
    "GoogleCloudDatacatalogV1alpha3CrawlerConfig": {
      "id": "GoogleCloudDatacatalogV1alpha3CrawlerConfig",
      "description": "Information about the crawler configuration.",
      "type": "object",
      "properties": {
        "bucketScope": {
          "description": "Bucket scope. Crawl buckets within the project that owns the crawler.",
          "$ref": "GoogleCloudDatacatalogV1alpha3BucketScope"
        },
        "projectScope": {
          "description": "Project scope. Crawl the project that owns the crawler.",
          "$ref": "GoogleCloudDatacatalogV1alpha3ParentProjectScope"
        },
        "organizationScope": {
          "description": "Organization scope. Crawl the organization that owns the crawler.",
          "$ref": "GoogleCloudDatacatalogV1alpha3ParentOrganizationScope"
        },
        "runOption": {
          "enumDescriptions": [
            "Unspecified run option.",
            "Manual run option.",
            "Scheduled run option."
          ],
          "type": "string",
          "enum": [
            "RUN_OPTION_UNSPECIFIED",
            "MANUAL",
            "SCHEDULED"
          ]
        },
        "scheduledRunOption": {
          "enumDescriptions": [
            "Unspecified scheduled run option.",
            "Daily scheduled run option.",
            "Weekly scheduled run option."
          ],
          "type": "string",
          "enum": [
            "SCHEDULED_RUN_OPTION_UNSPECIFIED",
            "DAILY",
            "WEEKLY"
          ]
        },
        "bundleSpecs": {
          "description": "The bundling specifications.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDatacatalogV1alpha3BucketScope": {
      "id": "GoogleCloudDatacatalogV1alpha3BucketScope",
      "description": "Configuration to scope a crawler to the provided list of buckets.",
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1alpha3BucketSpec"
          }
        }
      }
    },
    "GoogleCloudDatacatalogV1alpha3BucketSpec": {
      "id": "GoogleCloudDatacatalogV1alpha3BucketSpec",
      "description": "Configuration for a crawl bucket.",
      "type": "object",
      "properties": {
        "bucket": {
          "description": "The bucket name. For example, GCS bucket name.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDatacatalogV1alpha3ParentProjectScope": {
      "id": "GoogleCloudDatacatalogV1alpha3ParentProjectScope",
      "description": "Configuration to scope a crawler to the parent project.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDatacatalogV1alpha3ParentOrganizationScope": {
      "id": "GoogleCloudDatacatalogV1alpha3ParentOrganizationScope",
      "description": "Configuration to scope a crawler to the parent Organization.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDatacatalogV1alpha3ListCrawlersResponse": {
      "id": "GoogleCloudDatacatalogV1alpha3ListCrawlersResponse",
      "description": "Response message for `ListCrawlers` API.",
      "type": "object",
      "properties": {
        "crawlers": {
          "description": "List of crawlers.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1alpha3Crawler"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results or empty if there are no\nmore results in the list.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "crawlers": {
          "methods": {
            "create": {
              "id": "datacatalog.projects.crawlers.create",
              "path": "v1alpha3/{+parent}/crawlers",
              "flatPath": "v1alpha3/projects/{projectsId}/crawlers",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project this crawler is in. Example:\n\"projects\/foo\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "grantMetadataReadPermission": {
                  "description": "Required. If this field is set to true, it will automatically grant\ncrawler service account storage.objectViewer role on the crawl buckets\nor storage.admin role on the crawl project or organization.",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudDatacatalogV1alpha3Crawler"
              },
              "response": {
                "$ref": "GoogleCloudDatacatalogV1alpha3Crawler"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Create a new crawler in a project. The request fails if the user does not\nhave permission to grant crawler service account on the designated data\nsource or the crawler (`parent`, crawlerId) exists."
            },
            "get": {
              "id": "datacatalog.projects.crawlers.get",
              "path": "v1alpha3/{+name}",
              "flatPath": "v1alpha3/projects/{projectsId}/crawlers/{crawlersId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the crawler. For example,\n\"projects\/foo\/crawlers\/bar\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/crawlers\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudDatacatalogV1alpha3Crawler"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets a crawler in a project."
            },
            "list": {
              "id": "datacatalog.projects.crawlers.list",
              "path": "v1alpha3/{+parent}/crawlers",
              "flatPath": "v1alpha3/projects/{projectsId}/crawlers",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of items to return. The default value for this field\nis 10. The maximum value for this field is 1000.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The next_page_token value returned from a previous list request, if any.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudDatacatalogV1alpha3ListCrawlersResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists the crawlers in a project."
            },
            "patch": {
              "id": "datacatalog.projects.crawlers.patch",
              "path": "v1alpha3/{+name}",
              "flatPath": "v1alpha3/projects/{projectsId}/crawlers/{crawlersId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Output only. The resource name of the crawler. Must be empty when creating\na crawler. For example, \"projects\/a\/crawlers\/b\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/crawlers\/[^\/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "description": "The update mask applies to the resource.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudDatacatalogV1alpha3Crawler"
              },
              "response": {
                "$ref": "GoogleCloudDatacatalogV1alpha3Crawler"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates a crawler in a project."
            },
            "delete": {
              "id": "datacatalog.projects.crawlers.delete",
              "path": "v1alpha3/{+name}",
              "flatPath": "v1alpha3/projects/{projectsId}/crawlers/{crawlersId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the crawler.\nFor example, \"projects\/bar\/crawlers\/foo\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/crawlers\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Deletes a crawler in a project. The request fails if the crawler does\nnot exist."
            }
          }
        }
      }
    }
  },
  "basePath": ""
}